<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ Copyright 2021 The Hekate Project
  ~
  ~ The Hekate Project licenses this file to you under the Apache License,
  ~ version 2.0 (the "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at:
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:tool="http://www.springframework.org/schema/tool"
    xmlns="http://www.hekate.io/spring/hekate-core"
    targetNamespace="http://www.hekate.io/spring/hekate-core"
    elementFormDefault="qualified">
    <xsd:import namespace="http://www.springframework.org/schema/beans"/>
    <xsd:import namespace="http://www.springframework.org/schema/tool"/>

    <xsd:element name="node">
        <xsd:annotation>
            <xsd:documentation>
                Registers a new instance of 'io.hekate.spring.bean.HekateSpringBootstrap' within a Spring context.
            </xsd:documentation>
            <xsd:appinfo>
                <tool:annotation>
                    <tool:exports type="io.hekate.core.Hekate"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="abstractNodeType">
                    <xsd:attribute name="id" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The unique identifier for a bean.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.core.HekateBootstrap#setNodeName(String name)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="config-report" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.core.HekateBootstrap#setConfigReport(boolean)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="abstractNodeType" abstract="true">
        <xsd:all minOccurs="0" maxOccurs="1">
            <xsd:element name="roles" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.core.HekateBootstrap#setRoles(java.util.List)'.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="role" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="properties" type="propertiesType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.core.HekateBootstrap#setProperties(java.util.Map)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="property-providers" type="nodePropertyProviders" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.core.HekateBootstrap#setPropertyProviders(java.util.List)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="default-codec" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.core.HekateBootstrap#setDefaultCodec(io.hekate.codec.CodecFactory)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="jmx" type="jmxServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.core.jmx.JmxServiceFactory.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="network" type="networkServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.network.NetworkServiceFactory'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="cluster" type="clusterServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.ClusterServiceFactory'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="messaging" type="messagingServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.messaging.MessagingServiceFactory'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="rpc" type="rpcServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.rpc.RpcServiceFactory'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="locks" type="lockServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.lock.LockServiceFactory'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="election" type="electionServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.election.ElectionServiceFactory.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="coordination" type="coordinationServiceType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.coordinate.CoordinationServiceFactory'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-services" type="customServicesType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers custom implementations of 'io.hekate.core.service.Service' interface.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="plugins" type="pluginsType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers implementations 'io.hekate.core.plugin.Plugin' interface.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="nodePropertyProviders">
        <xsd:sequence>
            <xsd:element name="provider" type="beanOrRefType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="customServicesType">
        <xsd:sequence>
            <xsd:element name="service" type="beanOrRefType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="pluginsType">
        <xsd:sequence>
            <xsd:element name="plugin" type="beanOrRefType" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.core.plugin.Plugin'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="networkServiceType">
        <xsd:all>
            <xsd:element name="host-selector" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.network.NetworkServiceFactory#setHostSelector(io.hekate.network.address.
                        AddressSelector)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="connectors" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.network.NetworkServiceFactory#setConnectors(List)'.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence maxOccurs="unbounded">
                        <xsd:choice>
                            <xsd:element name="connector" type="networkConnectorType" minOccurs="0">
                                <xsd:annotation>
                                    <xsd:documentation>
                                        Registers 'io.hekate.network.NetworkConnectorConfig'.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:element>
                        </xsd:choice>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setHost(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="port" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setPort(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="port-range" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setPortRange(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="connect-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    <xsd:annotation>
                        <xsd:documentation>
                            See javadoc of 'io.hekate.network.NetworkServiceFactory#setConnectTimeout(int)'.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="accept-retry-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setAcceptRetryInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="heartbeat-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setHeartbeatInterval(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="heartbeat-loss-threshold" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setHeartbeatLossThreshold(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nio-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setNioThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="transport" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setTransport(io.hekate.network.NetworkTransportType)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="tcp-no-delay" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setTcpNoDelay(boolean)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="tcp-receive-buffer-size" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setTcpReceiveBufferSize(java.lang.Integer)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="tcp-send-buffer-size" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setTcpSendBufferSize(java.lang.Integer)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="tcp-reuse-address" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setTcpReuseAddress(java.lang.Boolean)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="tcp-backlog" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkServiceFactory#setTcpBacklog(java.lang.Boolean)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="networkConnectorType">
        <xsd:all minOccurs="0">
            <xsd:element name="server-handler" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.network.NetworkConnectorConfig#setServerHandler(io.hekate.network.NetworkServerHandler)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-codec" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.network.NetworkConnectorConfig#setMessageCodec(io.hekate.codec.CodecFactory)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="protocol" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkConnectorConfig#setProtocol(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="idle-socket-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkConnectorConfig#setIdleSocketTimeout(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nio-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkConnectorConfig#setNioThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="log-category" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.network.NetworkConnectorConfig#setLogCategory(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterServiceType">
        <xsd:all>
            <xsd:element name="seed-node-provider" type="clusterSeedNodeProviderOrGroup" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.SeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="split-brain-detection" type="clusterSplitBrainDetectionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.split.SplitBrainDetector'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="failure-detection" type="clusterFailureDetectionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.health.FailureDetector'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="listeners" type="clusterListenersType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.ClusterServiceFactory#setClusterListeners(java.util.List)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="acceptors" type="clusterAcceptorsType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.ClusterServiceFactory#setAcceptors(java.util.List)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="namespace" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.ClusterServiceFactory#setNamespace(String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="gossip-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.ClusterServiceFactory#setGossipInterval(long).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="gossip-speedup-size" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.ClusterServiceFactory#setSpeedUpGossipSize(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterSeedNodeProviderOrGroup">
        <xsd:choice>
            <xsd:group ref="clusterSeedNodeProviderGroup"/>
        </xsd:choice>
        <xsd:attribute name="ref" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Reference to a bean of 'io.hekate.cluster.seed.SeedNodeProvider' type.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterSeedNodeProviderGroupType">
        <xsd:sequence maxOccurs="unbounded">
            <xsd:group ref="clusterSeedNodeProviderGroup"/>
        </xsd:sequence>
        <xsd:attribute name="policy" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of
                    'io.hekate.cluster.seed.SeedNodeProviderGroupConfig#setPolicy(io.hekate.cluster.seed.SeedNodeProviderGroupPolicy).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:group name="clusterSeedNodeProviderGroup">
        <xsd:choice>
            <xsd:element name="group" type="clusterSeedNodeProviderGroupType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.SeedNodeProviderGroup.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="multicast" type="clusterMulticastSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="static" type="clusterStaticSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.StaticSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="jdbc" type="clusterJdbcSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="zookeeper" type="clusterZooKeeperSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.zookeeper.ZooKeeperSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="etcd" type="clusterEtcdSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.etcd.EtcdSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="consul" type="clusterConsulSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.consul.ConsulSeedNodeProvider.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="shared-folder" type="clusterSharedFolderSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.fs.FsSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="cloud-store" type="clusterCloudStoreSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.jclouds.CloudStoreSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="cloud" type="clusterCloudSeedNodeProviderType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-provider" type="beanOrRefType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.seed.SeedNodeProvider'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:group>

    <xsd:complexType name="clusterMulticastSeedNodeProviderType">
        <xsd:attribute name="group" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProviderConfig#setGroup(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="port" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProviderConfig#setPort(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ttl" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProviderConfig#setTtl(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProviderConfig#setInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="wait-time-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProviderConfig#setWaitTime(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="loopback-disabled" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.multicast.MulticastSeedNodeProviderConfig#setLoopBackDisabled(boolean)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterStaticSeedNodeProviderType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="address" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.StaticSeedNodeProviderConfig#setAddresses(java.util.List)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="clusterJdbcSeedNodeProviderType">
        <xsd:all>
            <xsd:element name="datasource" type="beanOrRefType">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setDataSource(javax.sql.DataSource)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="query-timeout-sec" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setQueryTimeout(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cleanup-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setCleanupInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="table" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setTable(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host-column" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setHostColumn(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="port-column" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setPortColumn(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="namespace-column" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jdbc.JdbcSeedNodeProviderConfig#setNamespaceColumn(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterZooKeeperSeedNodeProviderType">
        <xsd:attribute name="connection-string" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.zookeeper.ZooKeeperSeedNodeProviderConfig#setConnectionString(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="connect-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.zookeeper.ZooKeeperSeedNodeProviderConfig#setConnectTimeout(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="session-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.zookeeper.ZooKeeperSeedNodeProviderConfig#setSessionTimeout(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cleanup-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.zookeeper.ZooKeeperSeedNodeProviderConfig#setCleanupInterval(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="base-path" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.zookeeper.ZooKeeperSeedNodeProviderConfig#setBasePath(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterEtcdSeedNodeProviderType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="endpoint" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.etcd.EtcdSeedNodeProviderConfig#setEndpoints(java.util.List)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="username" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.etcd.EtcdSeedNodeProviderConfig#setUsername(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="password" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.etcd.EtcdSeedNodeProviderConfig#setPassword(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cleanup-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.etcd.EtcdSeedNodeProviderConfig#setCleanupInterval(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="base-path" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.etcd.EtcdSeedNodeProviderConfig#setBasePath(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterConsulSeedNodeProviderType">
        <xsd:attribute name="url" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setUrl(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cleanup-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setCleanupInterval(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="base-path" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setBasePath(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="acl-token" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setAclToken(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="connect-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setConnectTimeout(Long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="read-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setReadTimeout(Long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="write-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.consul.ConsulSeedNodeProviderConfig#setWriteTimeout(Long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterCloudSeedNodeProviderType">
        <xsd:all minOccurs="0">
            <xsd:element name="credentials" type="cloudProviderCredentialsType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setRegions(java.util.Set)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="regions" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setNodeRoles(java.util.Set)'.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="region" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="zones" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setZones(java.util.Set)'.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="zone" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="tags" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setTags(java.util.Map)'.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="tag" minOccurs="0" maxOccurs="unbounded">
                            <xsd:complexType>
                                <xsd:attribute name="name" type="xsd:string" use="required">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Tag name.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:attribute>
                                <xsd:attribute name="value" type="xsd:string" use="required">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Tag value.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                </xsd:attribute>
                            </xsd:complexType>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="properties" type="propertiesType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setProperties(java.util.Properties)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="provider" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setProvider(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="endpoint" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jclouds.CloudSeedNodeProviderConfig#setEndpoint(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterCloudStoreSeedNodeProviderType">
        <xsd:all minOccurs="0">
            <xsd:element name="credentials" type="cloudProviderCredentialsType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.cluster.seed.jclouds.CloudStoreSeedNodeProviderConfig#setCredentials(
                        io.hekate.cluster.seed.jclouds.CredentialsSupplier)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="properties" type="propertiesType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.cluster.seed.jclouds.CloudStoreSeedNodeProviderConfig#setProperties(java.util.Properties)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="provider" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jclouds.CloudStoreSeedNodeProviderConfig#setProvider(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="container" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jclouds.CloudStoreSeedNodeProviderConfig#setContainer(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cleanup-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.jclouds.CloudStoreSeedNodeProviderConfig#setCleanupInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="cloudProviderCredentialsType">
        <xsd:choice>
            <xsd:element name="basic" minOccurs="0">
                <xsd:complexType>
                    <xsd:attribute name="identity" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.cluster.seed.jclouds.BasicCredentialsSupplier#setIdentity(java.lang.String)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="credential" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.cluster.seed.jclouds.BasicCredentialsSupplier#setCredential(java.lang.String)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="custom-supplier" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers a custom implementation of 'io.hekate.cluster.seed.jclouds.CredentialsSupplier' interface.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:choice>
    </xsd:complexType>

    <xsd:complexType name="clusterSharedFolderSeedNodeProviderType">
        <xsd:attribute name="work-dir" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.fs.FsSeedNodeProviderConfig#setWorkDir(java.io.File)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cleanup-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.seed.fs.FsSeedNodeProviderConfig#setCleanupInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterSplitBrainDetectionType">
        <xsd:sequence minOccurs="0">
            <xsd:element name="group" type="splitBrainDetectorsGroupType">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.cluster.split.SplitBrainDetectorGroup'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="check-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.ClusterServiceFactory#setSplitBrainCheckInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="splitBrainDetectorsGroupType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:choice>
                <xsd:element name="group" type="splitBrainDetectorsGroupType">
                    <xsd:annotation>
                        <xsd:documentation>
                            Registers 'io.hekate.cluster.split.SplitBrainDetectorGroup'.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="address-reachable">
                    <xsd:annotation>
                        <xsd:documentation>
                            Registers 'io.hekate.cluster.split.AddressReachabilityDetector'.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                        <xsd:attribute name="address" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Address as 'host:port' (f.e. '192.168.39.41:10012').
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="timeout-ms" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Connect timeout in milliseconds.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="host-reachable">
                    <xsd:annotation>
                        <xsd:documentation>
                            Registers 'io.hekate.cluster.split.HostReachabilityDetector'.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                        <xsd:attribute name="host" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Host to be checked for reachability (f.e. '192.168.39.41').
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="timeout-ms" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Timeout in milliseconds for host reachability checking (see 'java.net.InetAddress#isReachable(int)')
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="custom-detector" type="beanOrRefType">
                    <xsd:annotation>
                        <xsd:documentation>
                            Registers a custom implementation of 'io.hekate.cluster.split.SplitBrainDetector' interface.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="require">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.cluster.split.SplitBrainDetectorGroup#setGroupPolicy(GroupPolicy)'.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="ANY_VALID">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.cluster.split.SplitBrainDetectorGroup.GroupPolicy#ANY_VALID'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="ALL_VALID">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.cluster.split.SplitBrainDetectorGroup.GroupPolicy#ALL_VALID'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                    <xsd:enumeration value="QUORUM">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.cluster.split.SplitBrainDetectorGroup.GroupPolicy#QUORUM'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:enumeration>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="clusterFailureDetectionType">
        <xsd:sequence>
            <xsd:choice minOccurs="0">
                <xsd:element name="heartbeat">
                    <xsd:annotation>
                        <xsd:documentation>
                            Registers 'io.hekate.cluster.health.DefaultFailureDetector'.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                        <xsd:attribute name="interval-ms" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    See javadoc of 'io.hekate.cluster.health.DefaultFailureDetectorConfig#setHeartbeatInterval(long)'.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="loss-threshold" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    See javadoc of 'io.hekate.cluster.health.DefaultFailureDetectorConfig#setHeartbeatLossThreshold(int)'.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="quorum" type="xsd:string">
                            <xsd:annotation>
                                <xsd:documentation>
                                    See javadoc of 'io.hekate.cluster.health.DefaultFailureDetectorConfig#setFailureDetectionQuorum(int)'.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:attribute>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="custom-detector" type="beanOrRefType">
                    <xsd:annotation>
                        <xsd:documentation>
                            Registers a custom implementation of 'io.hekate.cluster.health.FailureDetector' interface.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="clusterListenersType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="listener" type="beanOrRefType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.event.ClusterEventListener'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="clusterAcceptorsType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="acceptor" type="beanOrRefType">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.cluster.ClusterAcceptor'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="messagingServiceType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="channel" type="messagingChannelType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.messaging.MessagingChannelConfig'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="messagingChannelType">
        <xsd:all minOccurs="0">
            <xsd:element name="receiver" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setReceiver(io.hekate.messaging.MessageReceiver)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="load-balancer" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.messaging.MessagingChannelConfig#setLoadBalancer(io.hekate.messaging.unicast.LoadBalancer)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-codec" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setMessageCodec(io.hekate.codec.CodecFactory)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="cluster-filter" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setClusterFilter(io.hekate.cluster.ClusterNodeFilter)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="back-pressure" type="messagingBackPressureType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.messaging.MessagingConfigBase#setBackPressure(io.hekate.messaging.MessagingBackPressureConfig)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setName(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="base-type" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#MessagingChannelConfig(java.lang.Class)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="worker-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setWorkerThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="partitions" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setPartitions(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="backup-nodes" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setBackupNodes(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="messaging-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setMessagingTimeout(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="log-category" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingChannelConfig#setLogCategory(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nio-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingConfigBase#setNioThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="idle-socket-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingConfigBase#setIdleSocketTimeout(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="messagingBackPressureType">
        <xsd:all minOccurs="0">
            <xsd:element name="outbound" minOccurs="0">
                <xsd:complexType>
                    <xsd:attribute name="low-watermark" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.messaging.MessagingBackPressureConfig#setInLowWatermark(int)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="high-watermark" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.messaging.MessagingBackPressureConfig#setInHighWatermark(int)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="overflow" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.messaging.MessagingBackPressureConfig#setOutOverflow(io.hekate.messaging
                                .MessagingOverflowPolicy)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="inbound" minOccurs="0">
                <xsd:complexType>
                    <xsd:attribute name="low-watermark" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.messaging.MessagingBackPressureConfig#setOutLowWatermark(int)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="high-watermark" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.messaging.MessagingBackPressureConfig#setOutHighWatermark(int)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:complexType>
            </xsd:element>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="rpcServiceType">
        <xsd:sequence>
            <xsd:element name="back-pressure" type="messagingBackPressureType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.messaging.MessagingConfigBase#setBackPressure(io.hekate.messaging.MessagingBackPressureConfig)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:element name="clients" minOccurs="0">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="client" type="rpcClientType" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Registers 'io.hekate.rpc.RpcClientConfig'.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="servers" minOccurs="0">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="server" type="rpcServerType" minOccurs="0" maxOccurs="unbounded">
                            <xsd:annotation>
                                <xsd:documentation>
                                    Registers 'io.hekate.rpc.RpcServerConfig'.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="worker-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.rpc.RpcServiceFactory#setWorkerThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nio-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingConfigBase#setNioThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="idle-socket-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.messaging.MessagingConfigBase#setIdleSocketTimeout(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="rpcClientType">
        <xsd:all minOccurs="0">
            <xsd:element name="load-balancer" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.rpc.RpcClientConfig#setLoadBalancer(io.hekate.rpc.RpcLoadBalancer)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="name" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Sets the bean name for this RPC client.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="interface" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.rpc.RpcClientConfig#setRpcInterface(java.lang.Class)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="tag" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.rpc.RpcClientConfig#setTag(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="rpcServerType">
        <xsd:all minOccurs="0">
            <xsd:element name="tags" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.rpc.RpcServerConfig#setTags(java.util.Set)'.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="tag" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="handler" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.rpc.RpcServerConfig#setHandler(java.lang.Object)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
    </xsd:complexType>

    <xsd:complexType name="lockServiceType">
        <xsd:sequence maxOccurs="unbounded">
            <xsd:element name="region" type="lockRegionType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.lock.LockRegionConfig'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="retry-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.lock.LockServiceFactory#setRetryInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nio-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.lock.LockServiceFactory#setNioThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="worker-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.lock.LockServiceFactory#setWorkerThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="lockRegionType">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
            <xsd:element name="lock">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers a bean of 'io.hekate.lock.DistributedLock' type within the Spring context.
                    </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                    <xsd:attribute name="name" type="xsd:string" use="required">
                        <xsd:annotation>
                            <xsd:documentation>
                                See javadoc of 'io.hekate.lock.LockRegion#getLock(java.lang.String)'.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.lock.LockRegionConfig#setName(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="electionServiceType">
        <xsd:sequence maxOccurs="unbounded">
            <xsd:element name="candidate" type="electionCandidateType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.election.CandidateConfig'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="electionCandidateType">
        <xsd:complexContent>
            <xsd:extension base="beanOrRefType">
                <xsd:attribute name="group" type="xsd:string" use="required">
                    <xsd:annotation>
                        <xsd:documentation>
                            See javadoc of 'io.hekate.election.CandidateConfig#setGroup(java.lang.String)'.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="coordinationServiceType">
        <xsd:sequence maxOccurs="unbounded">
            <xsd:element name="process" type="coordinationProcessType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        Registers 'io.hekate.coordinate.CoordinationProcessConfig'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The unique identifier of this service bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="nio-threads" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.coordinate.CoordinationServiceFactory#setNioThreads(int)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="retry-interval-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.coordinate.CoordinationServiceFactory#setRetryInterval(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="idle-socket-timeout-ms" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.coordinate.CoordinationServiceFactory#setIdleSocketTimeout(long)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="coordinationProcessType">
        <xsd:all>
            <xsd:element name="handler" type="beanOrRefType">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of
                        'io.hekate.coordinate.CoordinationProcessConfig#setHandler(io.hekate.coordinate.CoordinationHandler)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="message-codec" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc of 'io.hekate.coordinate.CoordinationProcessConfig#setMessageCodec(io.hekate.codec.CodecFactory)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc of 'io.hekate.coordinate.CoordinationProcessConfig#setName(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="jmxServiceType">
        <xsd:all>
            <xsd:element name="server" type="beanOrRefType" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>
                        See javadoc 'io.hekate.core.jmx.JmxServiceFactory#setServer(javax.management.MBeanServer)'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:all>
        <xsd:attribute name="domain" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    See javadoc 'io.hekate.core.jmx.JmxServiceFactory#setDomain(java.lang.String)'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="propertiesType">
        <xsd:sequence>
            <xsd:element name="prop" type="propertyType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="propertyType">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="name" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation>
                            Property name.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="beanOrRefType">
        <xsd:all minOccurs="0">
            <xsd:element ref="beans:bean"/>
        </xsd:all>
        <xsd:attribute name="ref" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the referenced bean.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
</xsd:schema>
